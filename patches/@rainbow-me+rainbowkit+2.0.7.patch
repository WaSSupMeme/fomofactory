diff --git a/node_modules/@rainbow-me/rainbowkit/dist/index.js b/node_modules/@rainbow-me/rainbowkit/dist/index.js
index eab78f6..3809456 100644
--- a/node_modules/@rainbow-me/rainbowkit/dist/index.js
+++ b/node_modules/@rainbow-me/rainbowkit/dist/index.js
@@ -943,18 +943,14 @@ import { normalize } from "viem/ens";
 import { useEnsAvatar } from "wagmi";
 import { mainnet as mainnet2 } from "wagmi/chains";
 
-// src/hooks/useIsMainnetConfigured.ts
-import { mainnet } from "wagmi/chains";
-function useIsMainnetConfigured() {
-  const rainbowKitChains = useRainbowKitChains();
-  const chainId = mainnet.id;
-  const configured = rainbowKitChains.some((rainbowKitChain) => rainbowKitChain.id === chainId);
-  return configured;
-}
-
 // src/hooks/useMainnetEnsAvatar.ts
 function useMainnetEnsAvatar(name) {
-  const mainnetConfigured = useIsMainnetConfigured();
+  const config = createConfig({
+    chains: [mainnet2],
+    transports: {
+      [mainnet2.id]: http(),
+    },
+  })
   const safeNormalize = (ensName) => {
     try {
       return normalize(ensName);
@@ -962,11 +958,8 @@ function useMainnetEnsAvatar(name) {
     }
   };
   const { data: ensAvatar } = useEnsAvatar({
-    chainId: mainnet2.id,
     name: name ? safeNormalize(name) : void 0,
-    query: {
-      enabled: mainnetConfigured
-    }
+    config
   });
   return ensAvatar;
 }
@@ -975,13 +968,15 @@ function useMainnetEnsAvatar(name) {
 import { useEnsName } from "wagmi";
 import { mainnet as mainnet3 } from "wagmi/chains";
 function useMainnetEnsName(address) {
-  const mainnetConfigured = useIsMainnetConfigured();
+  const config = createConfig({
+    chains: [mainnet3],
+    transports: {
+      [mainnet3.id]: http(),
+    },
+  })
   const { data: ensName } = useEnsName({
-    chainId: mainnet3.id,
     address,
-    query: {
-      enabled: mainnetConfigured
-    }
+    config
   });
   return ensName;
 }
@@ -5545,7 +5540,7 @@ function ConnectButton({
           userSelect: "none"
         }
       }
-    }, ready2 && account && connectionStatus === "connected" ? /* @__PURE__ */ React62.createElement(React62.Fragment, null, chain && (chains.length > 1 || unsupportedChain) && /* @__PURE__ */ React62.createElement(Box, {
+    }, ready2 && account && connectionStatus === "connected" ? /* @__PURE__ */ React62.createElement(React62.Fragment, null, chain && (chains.length >= 1 || unsupportedChain) && /* @__PURE__ */ React62.createElement(Box, {
       alignItems: "center",
       "aria-label": "Chain Selector",
       as: "button",
